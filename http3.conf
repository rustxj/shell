user nginx;

pid /var/run/nginx.pid;

##################################################################################
# nginx.conf Performance Tuning: https://github.com/denji/nginx-tuning
##################################################################################

worker_processes auto;
worker_cpu_affinity auto;


worker_rlimit_nofile 100000;

# only log critical errors
error_log /var/log/nginx/error.log crit;
 
events
    {
        use epoll;
        worker_connections 100000;
        multi_accept off;
        accept_mutex off;
    }

http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
  '$status $body_bytes_sent "$http_referer" '
  '"$http_user_agent" "$http_x_forwarded_for"';

        server_names_hash_bucket_size 128;
        client_header_buffer_size 32k;
        large_client_header_buffers 4 32k;
        client_max_body_size 50m;
        sendfile on;
        sendfile_max_chunk 512k;
        tcp_nopush on;

        keepalive_timeout 60;

        tcp_nodelay on;

        fastcgi_connect_timeout 300;
        fastcgi_send_timeout 300;
        fastcgi_read_timeout 300;
        fastcgi_buffer_size 64k;
        fastcgi_buffers 4 64k;
        fastcgi_busy_buffers_size 128k;
        fastcgi_temp_file_write_size 256k;

        gzip on;
        gzip_http_version 1.1;
        gzip_vary on;
        gzip_comp_level 3;
        gzip_proxied any;
        gzip_types text/plain text/css application/json application/javascript application/x-javascript text/javascript;

        brotli_static on;
        brotli on;
        brotli_types text/plain text/css application/json application/javascript application/x-javascript text/javascript;
        brotli_comp_level 3;
        #proxy_cache_path /cache levels=1:2 keys_zone=cache_one:10000m max_size=10000g inactive=99999d;
        #limit_conn_zone $binary_remote_addr zone=perip:10m;
        access_log off;


# HTTPS server
#
 server {
   listen 80;
   server_name _;
   add_header alt-svc 'h3-27=":443"; ma=86400, h3-28=":443"; ma=86400, h3-29=":443"; ma=86400';
   return 301 https://$host$request_uri;
 }
server {
  listen 443 quic reuseport;
  listen 443 ssl http2;
  server_name _;
  http2_push_preload on;
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_certificate      /etc/ssl/dev.crt;
  ssl_certificate_key  /etc/ssl/dev.key;
  ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
  ssl_ecdh_curve X25519:secp384r1;
  ssl_session_cache builtin:1000 shared:SSL:10m;
  ssl_session_timeout 5m;
  ssl_early_data on;
  ssl_prefer_server_ciphers on;

  add_header alt-svc 'h3-27=":443"; ma=86400, h3-28=":443"; ma=86400, h3-29=":443"; ma=86400';
  add_header X-Early-Data $tls1_3_early_data;

  add_header Strict-Transport-Security "max-age=31536000" always;
  location / {
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header REMOTE-HOST $remote_addr;
    proxy_pass http://157.90.243.121;
   }
}




map $ssl_early_data $tls1_3_early_data {
  "~." $ssl_early_data;
  default "";
}
  
  
}
